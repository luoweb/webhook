name: build
on: [push, pull_request]
jobs:
  build:
    env:
      # The special value "local" tells Go to use the bundled Go
      # version rather than trying to fetch one according to a
      # `toolchain` value in `go.mod`. This ensures that we're
      # really running the Go version in the CI matrix rather than
      # one that the Go command has upgraded to automatically.
      GOTOOLCHAIN: local
    strategy:
      matrix:
        go-version: [1.21.x, 1.22.x]
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
        id: go

      - name: Build
        run: go build -v

      - name: Set build time variable
        run: echo "BUILD_TIME=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV

      - name: 编译后端
        run: |
          make build-all GIT_COMMIT=${{ github.sha }} GIT_TAG=${{ github.ref_name }} GIT_REPOSITORY=${{ github.repository }} BUILD_DATE=${{ env.BUILD_TIME }} VERSION=${{ github.ref_name }} MODEL=${{ env.OPENAI_API_MODEL }} API_KEY=${{ secrets.OPENAI_API_KEY }} API_URL=${{ env.OPENAI_API_URL }}

      - name: 上传二进制
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: webhook
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
          
      - name: Test
        run: go test -v ./...
